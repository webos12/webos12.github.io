Workflow to create a github repo  on a new chromebook

Go to github.com
Create github account: <USER>

If you want your repo to be statically served at the address:
https://<USER>.github.io, then create a public repo named
<USER>.github.io. (Otherwise, name it anything you want.)
This repo name is <REPO>.

Search the chromebook (not in the browser) for "Linux"
(it should be under Settings -> Developers) and install it.

Open the terminal

Search the web for "gh-cli Linux installation". The webpage may be something
like: https://github.com/cli/cli/blob/trunk/docs/install_linux.md

Install the 'gh' command by pasting in the relevant command line, which may 
more or less look like the following:

type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
&& sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
&& echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
&& sudo apt update \
&& sudo apt install gh -y

Run these commands

gh auth login
git config --global user.email "whatever12345@gmail.com"
git config --global user.name "Slermerish Yooblex Jankister"
cd ~/yourproject
git init
git branch -m main
git remote add origin https://github.com/<USER>/<REPO>.git

So a static site repo will look like

git remote add origin https://github.com/myname/coolrepo.github.io.git

Otherwise, it will just be:

git remote add origin https://github.com/myname/coolrepo.git


The following commands can be put into a script to automate the syncing of the
remote repo with the local project. 

cd ~/yourproject 
git add . 
git commit -m "Blark" 
git push -u origin main
 
